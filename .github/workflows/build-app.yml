# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    tags:
      - 'v[0-9]+.*'

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.9]
        include:
          - os: macos-latest
            x86_64: ./dist/zorkdemo.app
            name: macos.bin
          - os: ubuntu-latest
            x86_64: ./dist/zorkdemo
            name: bin
          - os: windows-latest
            x86_64: ./dist/zorkdemo.exe
            name: exe
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pyinstaller
        pip install -r requirements.txt
    - name: Install OS X dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install akeru-inc/tap/xcnotary
        brew update
        brew upgrade akeru-inc/tap/xcnotary
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Deploy with pyinstaller
      run: |
        echo "BUILD_NUMBER = '${{ github.run_number }}'" >> ${{ github.workspace }}/adventure/util.py
        pyinstaller zorkdemo.spec
        ${{ github.workspace }}/dist/zorkdemo --version
    - name: OSX code sign
      if: matrix.os == 'macos-latest'
      run: |
        echo "Preparing code signing certificate ..."
        security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
        security default-keychain -s $KEYCHAIN_PATH
        security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
        echo $P12_CERTIFICATE | base64 --decode > cert.p12
        security import cert.p12 -k $KEYCHAIN_PATH -P $P12_PASSWORD -T /usr/bin/codesign
        security find-identity -v
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
        codesign --verbose --deep --force --timestamp -o runtime --entitlements entitlements.plist --keychain $KEYCHAIN_PATH --sign "$CERTIFICATE_NAME" dist/zorkdemo
        ditto -ck -rsrc --sequesterRsrc --keepParent ./dist/zorkdemo ${{ matrix.x86_64 }}
        ditto -ck -rsrc --sequesterRsrc --keepParent ./dist/zorkdemo ./dist/zorkdemo.zip
      env:
        P12_CERTIFICATE: ${{ secrets.P12_CERT }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        CERTIFICATE_NAME: Brandon Corfman
        KEYCHAIN_PATH: zorkdemo.keychain
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
    - name: Notarize app
      if: matrix.os == 'macos-latest'
      run: |
        xcrun altool --store-password-in-keychain-item zorkdemo.keychain -u ${{ secrets.NOTARIZATION_USERNAME }} -p ${{ secrets.NOTARIZATION_PASSWORD }}
        xcnotary precheck ${{ matrix.x86_64 }}
        xcnotary notarize ${{ matrix.x86_64 }} --developer-account "${{ secrets.NOTARIZATION_USERNAME }}" --developer-password-keychain-item zorkdemo.keychain
    - name: Staple Release Build
      if: matrix.os == 'macos-latest'
      run: |
        xcrun stapler staple ${{ matrix.x86_64 }}
    - name: Upload x86_64 Binary
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ${{ matrix.x86_64 }}
        asset_name: zorkdemo.x86_64.${{ matrix.name }}
        asset_content_type: application/octet-stream
    - name: Keep last 3 releases
      uses: eregon/keep-last-n-releases@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        n: 3
