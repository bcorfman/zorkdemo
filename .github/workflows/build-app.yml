# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  release:
    types: [created]

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.9]
        include:
          - os: macos-latest
            x86_64: ./dist/zorkdemo
            aarch64: ./dist/zorkdemo
            name: macos
          - os: ubuntu-latest
            x86_64: ./dist/zorkdemo
            aarch64: ./dist/zorkdemo
            name: linux
          - os: windows-latest
            x86_64: ./dist/zorkdemo
            aarch64: ./dist/zorkdemo
            name: exe

    steps:
    - uses: actions/checkout@v2
    - name: Get Release
      id: get_release
      uses: bruceadams/get-release@v1.2.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pyinstaller
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Deploy with pyinstaller
      run: |
        echo "BUILD_NUMBER = '${{ github.run_number }}'" >> ${{ github.workspace }}/adventure/util.py
        pyinstaller zorkdemo.spec
        ${{ github.workspace }}/dist/zorkdemo --version
    - name: Upload x86_64 Binary
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{ matrix.x86_64 }}
        asset_name: zorkdemo.x86_64.${{ matrix.name }}
        asset_content_type: application/octet-stream
    - name: Upload aarch64 Binary
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{ matrix.aarch64 }}
        asset_name: zorkdemo.aarch64.${{ matrix.name }}
        asset_content_type: application/octet-stream
